name: Build Executables

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Test and Create Pull Request to Master"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true
  
permissions:
  contents: write
  id-token: write
  pull-requests: write
  pages: write
  actions: read

jobs:
  build_executables:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup .NET SDK for the NoMercy.Server project
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # Restore dependencies for the NoMercy.Server project
      - name: Restore dependencies
        run: dotnet restore NoMercy.Server.sln

      # Publish the NoMercy.Server project for the target OS
      - name: Publish NoMercy.Server
        run: |
          mkdir -p ./output
      
          # Publish for Linux
          dotnet publish ./src/NoMercy.Server/NoMercy.Server.csproj --configuration Release --runtime linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyMediaServer /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyMediaServer ./output/NoMercyMediaServer-linux-x64
      
          # Windows Build
          dotnet publish ./src/NoMercy.Server/NoMercy.Server.csproj --configuration Release --runtime win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyMediaServer /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyMediaServer.exe ./output/NoMercyMediaServer-windows-x64.exe

          # macOS Build
          dotnet publish ./src/NoMercy.Server/NoMercy.Server.csproj --configuration Release --runtime osx-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyMediaServer /p:PublishTrimmed=true --output ./output
          
          mkdir -p ./output/NoMercyMediaServer.app/Contents/{MacOS,Resources}
          cp ./output/NoMercyMediaServer ./output/NoMercyMediaServer.app/Contents/MacOS/
          cp ./src/NoMercy.Server/Assets/MacOS/Info.plist ./output/NoMercyMediaServer.app/Contents/
          cp ./src/NoMercy.Server/Assets/MacOS/icon.icns ./output/NoMercyMediaServer.app/Contents/Resources/AppIcon.icns
          chmod +x ./output/NoMercyMediaServer.app/Contents/MacOS/NoMercyMediaServer

          npm install -g create-dmg
          create-dmg ./output/NoMercyMediaServer.app ./output --overwrite --dmg-title="NoMercyMediaServer" --icon-size 128 --window-size 500 300 --app-drop-link 400 150 --icon NoMercyMediaServer.app 100 150
          mv ./output/NoMercyMediaServer*.dmg ./output/NoMercyMediaServer-macos-x64.dmg
          rm -rf ./output/NoMercyMediaServer.app

      - name: Publish NoMercy.Updater
        run: |
          mkdir -p ./output
      
          # Publish for Linux
          dotnet publish ./src/NoMercy.Updater/NoMercy.Updater.csproj --configuration Release --runtime linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyUpdater /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyUpdater ./output/NoMercyUpdater-linux-x64
      
          # Windows Build
          dotnet publish ./src/NoMercy.Updater/NoMercy.Updater.csproj --configuration Release --runtime win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyUpdater /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyUpdater.exe ./output/NoMercyUpdater-windows-x64.exe
      
          # macOS Build
          dotnet publish ./src/NoMercy.Updater/NoMercy.Updater.csproj --configuration Release --runtime osx-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyUpdater /p:PublishTrimmed=true --output ./output

          mkdir -p ./output/NoMercyUpdater.app/Contents/{MacOS,Resources}
          cp ./output/NoMercyUpdater ./output/NoMercyUpdater.app/Contents/MacOS/
          cp ./src/NoMercy.Server/Assets/MacOS/Info.plist.updater ./output/NoMercyUpdater.app/Contents/Info.plist
          cp ./src/NoMercy.Server/Assets/MacOS/icon.icns ./output/NoMercyUpdater.app/Contents/Resources/AppIcon.icns
          chmod +x ./output/NoMercyUpdater.app/Contents/MacOS/NoMercyUpdater

          npm install -g create-dmg
          create-dmg ./output/NoMercyUpdater.app ./output --overwrite --dmg-title="NoMercyUpdater" --icon-size 128 --window-size 500 300 --app-drop-link 400 150 --icon NoMercyUpdater.app 100 150
          mv ./output/NoMercyUpdater*.dmg ./output/NoMercyUpdater-macos-x64.dmg
          rm -rf ./output/NoMercyUpdater.app

      - name: Pull App Files
        uses: actions/checkout@v4
        with:
          repository: NoMercy-Entertainment/NoMercyApp
          path: ./src/NoMercy.App/Resources
          fetch-depth: 0
          ref: gh-pages

      - name: List App Files
        run: |
          ls -la ./src/NoMercy.App/Resources

      # Publish the NoMercy.Server project for the target OS
      - name: Publish NoMercy.App
        run: |
          mkdir -p ./output
      
          # Publish for Linux
          dotnet publish ./src/NoMercy.App/NoMercy.App.csproj --configuration Release --runtime linux-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyApp /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyApp ./output/NoMercyApp-linux-x64
      
          # Windows Build
          dotnet publish ./src/NoMercy.App/NoMercy.App.csproj --configuration Release --runtime win-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyApp /p:PublishTrimmed=true --output ./output
          mv ./output/NoMercyApp.exe ./output/NoMercyApp-windows-x64.exe
      
          # macOS Build
          dotnet publish ./src/NoMercy.App/NoMercy.App.csproj --configuration Release --runtime osx-x64 --self-contained true /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:EnableCompressionInSingleFile=true /p:DebugType=None /p:DebugSymbols=false /p:PublishReadyToRun=false /p:OutputFileName=NoMercyApp /p:PublishTrimmed=true --output ./output

          mkdir -p ./output/NoMercyApp.app/Contents/{MacOS,Resources}
          cp ./output/NoMercyApp ./output/NoMercyApp.app/Contents/MacOS/
          cp ./src/NoMercy.Server/Assets/MacOS/Info.plist.app ./output/NoMercyApp.app/Contents/Info.plist
          cp ./src/NoMercy.Server/Assets/MacOS/icon.icns ./output/NoMercyApp.app/Contents/Resources/AppIcon.icns
          chmod +x ./output/NoMercyApp.app/Contents/MacOS/NoMercyApp

          npm install -g create-dmg
          create-dmg ./output/NoMercyApp.app ./output --overwrite --dmg-title="NoMercyApp" --icon-size 128 --window-size 500 300 --app-drop-link 400 150 --icon NoMercyApp.app 100 150
          mv ./output/NoMercyApp*.dmg ./output/NoMercyApp-macos-x64.dmg
          rm -rf ./output/NoMercyApp.app

      - name: List NoMercy.App Output Size
        run: |
          du -sh ./output/*
          ls -lh ./output/
      
      # Get the version of the project
      - name: Get Version
        uses: kzrnm/get-net-sdk-project-versions-action@v2
        id: get-version
        with:
          proj-path: ./src/NoMercy.Server/NoMercy.Server.csproj
      - run: echo "${{steps.get-version.outputs.version}}"
          
      - name: Get Short SHA
        id: get_short_sha
        run: echo "::set-output name=short_sha::${GITHUB_SHA::7}"
        
      # Create the GitHub release
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get-version.outputs.version }}
          name: NoMercy MediaServer v${{ steps.get-version.outputs.version }}
          body: |            
            ## What's New
            This release includes the latest features, improvements, and bug fixes for NoMercy MediaServer.
            
            ## Downloads
            Binary executables are available for:
            - Windows (x64)
            - macOS (x64)
            - Linux (x64)
            
            Each platform includes the MediaServer, Updater, and App components.
            
            ## Installation
            Download the appropriate files for your platform and follow the installation instructions in our documentation.
            
            ## Feedback
            If you encounter any issues, please report them on our GitHub repository.

            Build: ${{ steps.get_short_sha.outputs.short_sha }}
          draft: false
          prerelease: false
          files: |
            ./output/NoMercyMediaServer-*
            ./output/NoMercyUpdater-*
            ./output/NoMercyApp-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
