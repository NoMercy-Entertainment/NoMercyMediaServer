name: 'Build RPM Packages'
description: 'Build CentOS/RHEL/Fedora packages'
inputs:
  version:
    description: 'Package version'
    required: true
  artifacts-path:
    description: 'Path to build artifacts'
    required: true
    default: './output'
  gpg-private-key:
    description: 'GPG private key for signing'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Install RPM build dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y rpm createrepo-c

    - name: Build RPM packages
      shell: bash
      run: |
        VERSION="${{ inputs.version }}"
        ARTIFACTS_PATH="${{ inputs.artifacts-path }}"

        # Setup RPM build environment
        mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}

        # Function to create RPM package
        create_rpm_package() {
          local name=$1
          local friendly_name=$2
          local bin_file=$3
          local desktop_file=$4

          # Validate source files exist
          if [ ! -f "$ARTIFACTS_PATH/$bin_file" ]; then
            echo "ERROR: Binary file not found: $ARTIFACTS_PATH/$bin_file"
            return 1
          fi
          
          if [ ! -f "./src/NoMercy.Server/Assets/Linux/$desktop_file" ]; then
            echo "ERROR: Desktop file not found: ./src/NoMercy.Server/Assets/Linux/$desktop_file"
            return 1
          fi

          # Copy source files to SOURCES
          cp "$ARTIFACTS_PATH/$bin_file" ~/rpmbuild/SOURCES/
          cp "./src/NoMercy.Server/Assets/Linux/$desktop_file" ~/rpmbuild/SOURCES/
          cp "./src/NoMercy.Server/Assets/Linux/icon.png" ~/rpmbuild/SOURCES/

          # Create spec file
          cat > ~/rpmbuild/SPECS/"${name}".spec << EOF
        Name: ${name}
        Version: ${VERSION}
        Release: 1%{?dist}
        Summary: ${friendly_name}
        License: Proprietary
        URL: https://nomercy.tv
        Source0: ${bin_file}
        Source1: ${desktop_file}
        Source2: icon.png
        BuildArch: x86_64
        BuildRoot: %{_tmppath}/%{name}-%{version}-%{release}-root
        
        # Dependencies for CentOS/RHEL/Fedora
        Requires: glibc
        Requires: systemd
  
        %description
        Modern Media Server Solution.
        
        NoMercy MediaServer provides a comprehensive media streaming and management
        solution with support for various media formats and streaming protocols.
  
        %prep
        # No preparation needed for binary package
        
        %build
        # No building needed for binary package
        
        %install
        rm -rf %{buildroot}
        
        # Create directory structure
        mkdir -p %{buildroot}/usr/bin
        mkdir -p %{buildroot}/usr/share/applications
        mkdir -p %{buildroot}/usr/share/icons/hicolor/scalable/apps
        mkdir -p %{buildroot}/usr/lib/systemd/user
        mkdir -p %{buildroot}/usr/share/doc/%{name}
        
        # Install files
        install -m 755 %{SOURCE0} %{buildroot}/usr/bin/${name}
        install -m 644 %{SOURCE1} %{buildroot}/usr/share/applications/
        install -m 644 %{SOURCE2} %{buildroot}/usr/share/icons/hicolor/scalable/apps/${friendly_name}.png
        
        # Create systemd service file
        cat > %{buildroot}/usr/lib/systemd/user/${name}.service << 'SERVICE_EOF'
        [Unit]
        Description=${friendly_name} Service
        After=network.target
        
        [Service]
        Type=simple
        ExecStart=/usr/bin/${name}
        Restart=on-failure
        RestartSec=5
        
        [Install]
        WantedBy=default.target
        SERVICE_EOF
        
        # Create documentation
        cat > %{buildroot}/usr/share/doc/%{name}/README << 'README_EOF'
        ${friendly_name}
        
        This package contains the ${friendly_name} application.
        
        To start the service:
        systemctl --user enable ${name}.service
        systemctl --user start ${name}.service
        
        For more information, visit: https://nomercy.tv
        README_EOF
  
        %files
        %defattr(-,root,root,-)
        %attr(755,root,root) /usr/bin/${name}
        %attr(644,root,root) /usr/share/applications/${desktop_file}
        %attr(644,root,root) /usr/share/icons/hicolor/scalable/apps/${friendly_name}.png
        %attr(644,root,root) /usr/lib/systemd/user/${name}.service
        %doc /usr/share/doc/%{name}/README
        
        %post
        # Update icon cache if available
        if command -v gtk-update-icon-cache >/dev/null 2>&1; then
            gtk-update-icon-cache -q /usr/share/icons/hicolor || true
        fi
        
        # Update desktop database if available  
        if command -v update-desktop-database >/dev/null 2>&1; then
            update-desktop-database /usr/share/applications || true
        fi
        
        # Reload systemd user daemon if systemd is available
        systemctl --user daemon-reload >/dev/null 2>&1 || true
        
        %preun
        # Stop and disable service if systemd is available
        if [ "\$1" -eq 0 ] ; then
            systemctl --user stop ${name}.service >/dev/null 2>&1 || true
            systemctl --user disable ${name}.service >/dev/null 2>&1 || true
        fi
        
        %postun
        # Update caches on removal
        if [ "\$1" -eq 0 ] ; then
            if command -v gtk-update-icon-cache >/dev/null 2>&1; then
                gtk-update-icon-cache -q /usr/share/icons/hicolor || true
            fi
            
            if command -v update-desktop-database >/dev/null 2>&1; then
                update-desktop-database /usr/share/applications || true
            fi
        fi
  
        %clean
        rm -rf %{buildroot}
  
        %changelog
        * $(date '+%a %b %d %Y') NoMercy <support@nomercy.tv> - ${VERSION}-1
        - Initial package release
        - Added systemd user service support
        - Included desktop integration
        EOF

          # Build RPM
          rpmbuild -bb ~/rpmbuild/SPECS/"${name}".spec

          # Copy to packages directory
          mkdir -p packages/rpm/pool/x86_64
          find ~/rpmbuild/RPMS -name "*.rpm" -exec cp {} packages/rpm/pool/x86_64/ \;
          
          echo "Successfully created RPM package for ${name}"
        }
        
        # Build packages
        create_rpm_package "nomercymediaserver" "NoMercy-MediaServer" "NoMercyMediaServer-linux-x64" "NoMercy-MediaServer.desktop"
        create_rpm_package "nomercyupdater" "NoMercy-Updater" "NoMercyUpdater-linux-x64" "NoMercy-Updater.desktop"
        create_rpm_package "nomercyapp" "NoMercy-App" "NoMercyApp-linux-x64" "NoMercy-App.desktop"
        
        # Generate repo metadata
        createrepo_c packages/rpm

    - name: Sign RPM repository
      shell: bash
      run: |
        # Import GPG private key for RPM signing
        echo "${{ inputs.gpg-private-key }}" | gpg --batch --import
        
        # Sign the repository metadata
        cd packages/rpm
        gpg --armor --detach-sig -o repodata/repomd.xml.asc repodata/repomd.xml

    - name: Upload RPM artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rpm-packages
        path: packages/rpm/
