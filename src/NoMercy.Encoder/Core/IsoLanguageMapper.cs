using static NoMercy.Encoder.Format.Rules.Languages;

namespace NoMercy.Encoder.Core;

public class IsoLanguageMapper
{
    public static readonly Dictionary<string, string> IsoToLanguage = new(StringComparer.OrdinalIgnoreCase)
    {
        { Aar, "afar" },
        { Abk, "abkhaz" },
        { Afr, "afrikaans" },
        { Aka, "akan" },
        { Alb, "albanian" },
        { Amh, "amharic" },
        { Ara, "arabic" },
        { Arg, "aragonese" },
        { Arm, "armenian" },
        { Asm, "assamese" },
        { Ava, "avaric" },
        { Ave, "avestan" },
        { Aym, "aymara" },
        { Aze, "azerbaijani" },
        { Bak, "bashkir" },
        { Bam, "bambara" },
        { Baq, "basque" },
        { Bel, "belarusian" },
        { Ben, "bengali" },
        { Bih, "bihari" },
        { Bis, "bislama" },
        { Bos, "bosnian" },
        { Bre, "breton" },
        { Bul, "bulgarian" },
        { Bur, "burmese" },
        { Cat, "catalan" },
        { Cha, "chamorro" },
        { Che, "chechen" },
        { Chi, "chinese" },
        { Chu, "old church slavonic, church slavonic, old bulgarian" },
        { Chv, "chuvash" },
        { Cor, "cornish" },
        { Cos, "corsican" },
        { Cre, "cree" },
        { Cze, "czech" },
        { Dan, "danish" },
        { Div, "divehi, dhivehi, maldivian" },
        { Dut, "dutch" },
        { Dzo, "dzongkha" },
        { Eng, "english" },
        { Epo, "esperanto" },
        { Est, "estonian" },
        { Ewe, "ewe" },
        { Fao, "faroese" },
        { Fij, "fijian" },
        { Fil, "filipino" },
        { Fin, "finnish" },
        { Fre, "french" },
        { Fry, "western frisian" },
        { Ful, "fulah" },
        { Geo, "georgian" },
        { Ger, "german" },
        { Gla, "scottish gaelic, gaelic" },
        { Gle, "irish" },
        { Glg, "galician" },
        { Glv, "manx" },
        { Gre, "greek" },
        { Grn, "guaraní" },
        { Gsw, "swiss german" },
        { Guj, "gujarati" },
        { Hat, "haitian, haitian creole" },
        { Hau, "hausa" },
        { Haw, "hawaiian" },
        { Heb, "hebrew" },
        { Her, "herero" },
        { Hin, "hindi" },
        { Hmo, "hiri motu" },
        { Hrv, "croatian" },
        { Hun, "hungarian" },
        { Ibo, "igbo" },
        { Ice, "icelandic" },
        { Ido, "ido" },
        { Iii, "sichuan yi" },
        { Iku, "inuktitut" },
        { Ile, "interlingue" },
        { Ina, "interlingua" },
        { Ind, "indonesian" },
        { Ipk, "inupiaq" },
        { Ita, "italian" },
        { Jav, "javanese" },
        { Jpn, "japanese" },
        { Kan, "kannada" },
        { Kas, "kashmiri" },
        { Kau, "kanuri" },
        { Kaz, "kazakh" },
        { Khm, "khmer" },
        { Kik, "kikuyu" },
        { Kin, "kinyarwanda" },
        { Kir, "kyrgyz" },
        { Kom, "komi" },
        { Kon, "kongo" },
        { Kor, "korean" },
        { Kua, "kwanyama, kuanyama" },
        { Kur, "kurdish" },
        { Lao, "lao" },
        { Lat, "latin" },
        { Lav, "latvian" },
        { Lim, "limburgish, limburgan, limburger" },
        { Lin, "lingala" },
        { Lit, "lithuanian" },
        { Ltz, "luxembourgish, letzeburgesch" },
        { Lub, "luba-katanga" },
        { Lug, "ganda" },
        { Mac, "macedonian" },
        { Mah, "marshallese" },
        { Mal, "malayalam" },
        { Mao, "māori" },
        { Mar, "marathi" },
        { May, "malay" },
        { Mlg, "malagasy" },
        { Mlt, "maltese" },
        { Mon, "mongolian" },
        { Nau, "nauru" },
        { Nav, "navajo, navaho" },
        { Nbl, "southern ndebele" },
        { Nde, "northern ndebele" },
        { Ndo, "ndonga" },
        { Nep, "nepali" },
        { Nno, "norwegian nynorsk" },
        { Nob, "norwegian bokmål" },
        { Nor, "norwegian" },
        { Nya, "chichewa, chewa, nyanja" },
        { Oci, "occitan" },
        { Oji, "ojibwe, ojibwa" },
        { Ori, "oriya" },
        { Orm, "oromo" },
        { Oss, "ossetian, ossetic" },
        { Pan, "punjabi" },
        { Per, "persian" },
        { Pli, "pāli" },
        { Pol, "polish" },
        { Por, "portuguese" },
        { Pus, "pashto" },
        { Que, "quechua" },
        { Roh, "romansh" },
        { Rum, "romanian" },
        { Run, "kirundi" },
        { Rus, "russian" },
        { Sag, "sango" },
        { San, "sanskrit (saṁskṛta)" },
        { Sin, "sinhala" },
        { Slo, "slovak" },
        { Slv, "slovenian" },
        { Sme, "northern sami" },
        { Smo, "samoan" },
        { Sna, "shona" },
        { Snd, "sindhi" },
        { Som, "somali" },
        { Sot, "southern sotho" },
        { Spa, "spanish" },
        { Srd, "sardinian" },
        { Srp, "serbian" },
        { Ssw, "swati" },
        { Sun, "sundanese" },
        { Swa, "swahili" },
        { Swe, "swedish" },
        { Tah, "tahitian" },
        { Tam, "tamil" },
        { Tat, "tatar" },
        { Tel, "telugu" },
        { Tgk, "tajik" },
        { Tgl, "tagalog" },
        { Tha, "thai" },
        { Tib, "tibetan" },
        { Tir, "tigrinya" },
        { Ton, "tonga" },
        { Tsn, "tswana" },
        { Tso, "tsonga" },
        { Tuk, "turkmen" },
        { Tur, "turkish" },
        { Twi, "twi" },
        { Uig, "uyghur, uighur" },
        { Ukr, "ukrainian" },
        { Urd, "urdu" },
        { Uzb, "uzbek" },
        { Ven, "venda" },
        { Vie, "vietnamese" },
        { Vol, "volapük" },
        { Wel, "welsh" },
        { Wln, "walloon" },
        { Wol, "wolof" },
        { Xho, "xhosa" },
        { Yid, "yiddish" },
        { Yor, "yoruba" },
        { Zha, "zhuang, chuang" },
        { Zul, "zulu" }
    };
    
    public static readonly Dictionary<string, string> Iso3ToIso2 = new(StringComparer.OrdinalIgnoreCase)
    {
        { Aar, "aa" },
        { Abk, "ab" },
        { Afr, "af" },
        { Aka, "ak" },
        { Alb, "sq" },
        { Amh, "am" },
        { Ara, "ar" },
        { Arg, "an" },
        { Arm, "hy" },
        { Asm, "as" },
        { Ava, "av" },
        { Ave, "ae" },
        { Aym, "ay" },
        { Aze, "az" },
        { Bak, "ba" },
        { Bam, "bm" },
        { Baq, "eu" },
        { Bel, "be" },
        { Ben, "bn" },
        { Bih, "bh" },
        { Bis, "bi" },
        { Bos, "bs" },
        { Bre, "br" },
        { Bul, "bg" },
        { Bur, "my" },
        { Cat, "ca" },
        { Cha, "ch" },
        { Che, "ce" },
        { Chi, "zh" },
        { Chu, "cu" },
        { Chv, "cv" },
        { Cor, "kw" },
        { Cos, "co" },
        { Cre, "cr" },
        { Cze, "cs" },
        { Dan, "da" },
        { Div, "dv" },
        { Dut, "nl" },
        { Dzo, "dz" },
        { Eng, "en" },
        { Epo, "eo" },
        { Est, "et" },
        { Ewe, "ee" },
        { Fao, "fo" },
        { Fij, "fj" },
        { Fil, "fi" },
        { Fin, "fr" },
        { Fre, "fy" },
        { Fry, "ff" },
        { Ful, "ka" },
        { Geo, "de" },
        { Ger, "gd" },
        { Gla, "ga" },
        { Gle, "gl" },
        { Glg, "gv" },
        { Glv, "el" },
        { Gre, "gn" },
        { Grn, "gu" },
        { Gsw, "ht" },
        { Guj, "ha" },
        { Hat, "he" },
        { Hau, "hz" },
        { Haw, "hi" },
        { Heb, "ho" },
        { Her, "hr" },
        { Hin, "hu" },
        { Hmo, "ig" },
        { Hrv, "is" },
        { Hun, "io" },
        { Ibo, "ii" },
        { Ice, "iu" },
        { Ido, "ie" },
        { Iii, "ia" },
        { Iku, "id" },
        { Ile, "ik" },
        { Ina, "it" },
        { Ind, "jv" },
        { Ipk, "ja" },
        { Ita, "kn" },
        { Jav, "ks" },
        { Jpn, "kr" },
        { Kan, "kk" },
        { Kas, "km" },
        { Kau, "ki" },
        { Kaz, "rw" },
        { Khm, "ky" },
        { Kik, "kv" },
        { Kin, "kg" },
        { Kir, "ko" },
        { Kom, "kj" },
        { Kon, "ku" },
        { Kor, "lo" },
        { Kua, "la" },
        { Kur, "lv" },
        { Lao, "li" },
        { Lat, "ln" },
        { Lav, "lt" },
        { Lim, "lb" },
        { Lin, "lu" },
        { Lit, "lg" },
        { Ltz, "mk" },
        { Lub, "mh" },
        { Lug, "ml" },
        { Mac, "mi" },
        { Mah, "mr" },
        { Mal, "ms" },
        { Mao, "mg" },
        { Mar, "mt" },
        { May, "mn" },
        { Mlg, "na" },
        { Mlt, "nv" },
        { Mon, "nr" },
        { Nau, "nd" },
        { Nav, "ng" },
        { Nbl, "ne" },
        { Nde, "nn" },
        { Ndo, "nb" },
        { Nep, "no" },
        { Nno, "ny" },
        { Nob, "oc" },
        { Nor, "oj" },
        { Nya, "or" },
        { Oci, "om" },
        { Oji, "os" },
        { Ori, "pa" },
        { Orm, "fa" },
        { Oss, "pi" },
        { Pan, "pl" },
        { Per, "pt" },
        { Pli, "ps" },
        { Pol, "qu" },
        { Por, "rm" },
        { Pus, "ro" },
        { Que, "rn" },
        { Roh, "ru" },
        { Rum, "sg" },
        { Run, "sa" },
        { Rus, "si" },
        { Sag, "sk" },
        { San, "sl" },
        { Sin, "se" },
        { Slo, "sm" },
        { Slv, "sn" },
        { Sme, "sd" },
        { Smo, "so" },
        { Sna, "st" },
        { Snd, "es" },
        { Som, "sc" },
        { Sot, "sr" },
        { Spa, "ss" },
        { Srd, "su" },
        { Srp, "sw" },
        { Ssw, "sv" },
        { Sun, "ty" },
        { Swa, "ta" },
        { Swe, "tt" },
        { Tah, "te" },
        { Tam, "tg" },
        { Tat, "tl" },
        { Tel, "th" },
        { Tgk, "bo" },
        { Tgl, "ti" },
        { Tha, "to" },
        { Tib, "tn" },
        { Tir, "ts" },
        { Ton, "tk" },
        { Tsn, "tr" },
        { Tso, "tw" },
        { Tuk, "ug" },
        { Tur, "uk" },
        { Twi, "ur" },
        { Uig, "uz" },
        { Ukr, "ve" },
        { Urd, "vi" },
        { Uzb, "vo" },
        { Ven, "cy" },
        { Vie, "wa" },
        { Vol, "wo" },
        { Wel, "xh" },
        { Wln, "yi" },
        { Wol, "yo" },
        { Xho, "za" },
        { Yid, "zu" }
    };
    
    public static string? GetIsoCode(string language)
    {
        Dictionary<string, string> languageToIso = IsoToLanguage.ToDictionary(kvp => kvp.Value, kvp => kvp.Key, StringComparer.OrdinalIgnoreCase);
        return languageToIso.TryGetValue(language, out string? isoCode) ? isoCode : null;
    }
}