// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoMercy.Database;

#nullable disable

namespace NoMercy.Database.Migrations
{
    [DbContext(typeof(MediaContext))]
    [Migration("20240114223936_Test6")]
    partial class Test6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("NoMercy.Database.Models.ActivityLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cover")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("Tracks")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_Artist", b =>
                {
                    b.Property<string>("AlbumId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId", "ArtistId");

                    b.ToTable("Album_Artist");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_Library", b =>
                {
                    b.Property<string>("AlbumId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Album_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_MusicGenre", b =>
                {
                    b.Property<string>("AlbumId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicGenreId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId", "MusicGenreId");

                    b.ToTable("Album_MusicGenre");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_Track", b =>
                {
                    b.Property<string>("AlbumId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId", "TrackId");

                    b.ToTable("Album_Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_User", b =>
                {
                    b.Property<string>("AlbumId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId1")
                        .HasColumnType("TEXT");

                    b.HasKey("AlbumId", "UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Album_User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.AlternativeTitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Iso31661")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.HasIndex("TvId");

                    b.ToTable("AlternativeTitles");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cover")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_Library", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Artist_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_MusicGenre", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("MusicGenreId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId", "MusicGenreId");

                    b.ToTable("Artist_MusicGenre");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_Track", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("Artist_Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_User", b =>
                {
                    b.Property<string>("ArtistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("ArtistId", "UserId");

                    b.ToTable("Artist_User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Cast", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TvId");

                    b.HasIndex("Id", "EpisodeId")
                        .IsUnique();

                    b.HasIndex("Id", "MovieId")
                        .IsUnique();

                    b.HasIndex("Id", "SeasonId")
                        .IsUnique();

                    b.HasIndex("Id", "TvId")
                        .IsUnique();

                    b.ToTable("Casts");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Iso31661")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Iso31661", "Rating")
                        .IsUnique();

                    b.ToTable("Certifications");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Certification_Movie", b =>
                {
                    b.Property<int>("CertificationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CertificationId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Certification_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Certification_Tv", b =>
                {
                    b.Property<int>("CertificationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CertificationId", "TvId");

                    b.HasIndex("TvId");

                    b.ToTable("Certification_Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Backdrop")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("Parts")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Poster")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleSort")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Collection_Library", b =>
                {
                    b.Property<int>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("CollectionId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Collection_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Collection_Movie", b =>
                {
                    b.Property<int>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Collection_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Configuration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Iso31661")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NativeName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Iso31661")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Creator", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId", "TvId");

                    b.HasIndex("TvId");

                    b.ToTable("Creators");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Crew", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TvId");

                    b.HasIndex("Id", "EpisodeId")
                        .IsUnique();

                    b.HasIndex("Id", "MovieId")
                        .IsUnique();

                    b.HasIndex("Id", "SeasonId")
                        .IsUnique();

                    b.HasIndex("Id", "TvId")
                        .IsUnique();

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Device", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CustomName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("Device");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Os")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("NoMercy.Database.Models.EncoderProfile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Container")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Param")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.ToTable("EncoderProfiles");
                });

            modelBuilder.Entity("NoMercy.Database.Models.EncoderProfile_Library", b =>
                {
                    b.Property<string>("EncoderProfileId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("EncoderProfileId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("EncoderProfile_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Episode", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductionCode")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Still")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvdbId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int?>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TvId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("NoMercy.Database.Models.FailedJob", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Connection")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FailedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FailedJobs");
                });

            modelBuilder.Entity("NoMercy.Database.Models.File", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("NoMercy.Database.Models.File_Library", b =>
                {
                    b.Property<string>("FileId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("FileId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("File_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.File_Movie", b =>
                {
                    b.Property<string>("FileId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FileId", "MovieId");

                    b.ToTable("File_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Folder", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Path")
                        .IsUnique();

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Folder_Library", b =>
                {
                    b.Property<string>("FolderId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("FolderId", "LibraryId");

                    b.HasIndex("LibraryId");

                    b.ToTable("Folder_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Genre_Movie", b =>
                {
                    b.Property<string>("GenreId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenreId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Genre_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Genre_Tv", b =>
                {
                    b.Property<string>("GenreId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenreId", "TvId");

                    b.HasIndex("TvId");

                    b.ToTable("Genre_Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.GuestStar", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("SeasonId");

                    b.ToTable("GuestStars");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TvId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AvailableAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Queue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReservedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Keyword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Keyword_Movie", b =>
                {
                    b.Property<int>("KeywordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KeywordId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("Keyword_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Keyword_Tv", b =>
                {
                    b.Property<int>("KeywordId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KeywordId", "TvId");

                    b.HasIndex("TvId");

                    b.ToTable("Keyword_Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Iso6391")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Iso6391")
                        .IsUnique();

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Language_Library", b =>
                {
                    b.Property<string>("LanguageId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("LanguageId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("LanguageId", "LibraryId");

                    b.HasIndex("LanguageId1");

                    b.HasIndex("LibraryId");

                    b.ToTable("Language_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("AutoRefreshInterval")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ChapterImages")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("ExtractChapters")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ExtractChaptersDuring")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("PerfectSubtitleMatch")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Realtime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpecialSeasonName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Libraries");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Movie", b =>
                {
                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LibraryId", "MovieId");

                    b.ToTable("Library_Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Track", b =>
                {
                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("LibraryId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("Library_Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Tv", b =>
                {
                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("LibraryId", "TvId");

                    b.ToTable("Library_Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_User", b =>
                {
                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("LibraryId", "UserId");

                    b.ToTable("Library_User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Media", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("SeasonId");

                    b.HasIndex("TvId");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("NoMercy.Database.Models.MediaAttachment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaAttachments");
                });

            modelBuilder.Entity("NoMercy.Database.Models.MediaStream", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MediaStreams");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Metadata", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Metadata");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Backdrop")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("BlurHash")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Budget")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Duration")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Homepage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("LibraryId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MoviedbId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalLanguage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalTitle")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("Poster")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Revenue")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Runtime")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Show")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tagline")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleSort")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Trailer")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Video")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int?>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("NoMercy.Database.Models.MusicGenre", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MusicGenres");
                });

            modelBuilder.Entity("NoMercy.Database.Models.MusicGenre_Track", b =>
                {
                    b.Property<string>("GenreId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("GenreId", "TrackId");

                    b.ToTable("MusicGenre_Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Music_Play", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("Music_Plays");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Notification", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Notification_User", b =>
                {
                    b.Property<string>("NotificationId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId1")
                        .HasColumnType("TEXT");

                    b.HasKey("NotificationId", "UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Notification_User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlsoKnownAs")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Biography")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("CastId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CrewId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeathDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Homepage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("KnownForDepartment")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<float?>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("Profile")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleSort")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.Property<int>("_gender")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Gender");

                    b.HasKey("Id");

                    b.HasIndex("CastId");

                    b.HasIndex("CrewId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Playlist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Playlist_Track", b =>
                {
                    b.Property<string>("PlaylistId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("PlaylistId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("Playlist_Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Priority_Provider", b =>
                {
                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Priority", "Country", "ProviderId");

                    b.ToTable("Priority_Provider");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Provider", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Recommendation", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieId1");

                    b.HasIndex("TvId");

                    b.HasIndex("TvId1");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NoMercy.Database.Models.RunningTask", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunningTasks");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("AirDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Poster")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int>("TvId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("TvId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Similar", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MovieId1")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("MovieId1");

                    b.HasIndex("TvId");

                    b.HasIndex("TvId1");

                    b.ToTable("Similar");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Special", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Specials");
                });

            modelBuilder.Entity("NoMercy.Database.Models.SpecialItem", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.ToTable("SpecialItems");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Track", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Track_User", b =>
                {
                    b.Property<string>("TrackId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId1")
                        .HasColumnType("TEXT");

                    b.HasKey("TrackId", "UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Track_User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biography")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Homepage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Iso31661")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Iso6391")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.HasIndex("EpisodeId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.HasIndex("MovieId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.HasIndex("PersonId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.HasIndex("SeasonId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.HasIndex("TvId", "Iso6391", "Iso31661")
                        .IsUnique();

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Tv", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Backdrop")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("Duration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FirstAirDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Folder")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("HaveEpisodes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Homepage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImdbId")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool?>("InProduction")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LastEpisodeToAir")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LibraryId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("MediaType")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("NextEpisodeToAir")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumberOfEpisodes")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NumberOfSeasons")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginCountry")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalLanguage")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("Poster")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("SpokenLanguages")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tagline")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleSort")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Trailer")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("TvdbId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<double?>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int?>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("_colorPalette")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("ColorPalette");

                    b.HasKey("Id");

                    b.ToTable("Tvs");
                });

            modelBuilder.Entity("NoMercy.Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Allowed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AudioTranscoding")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Manage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("NoTranscoding")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Owner")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("VideoTranscoding")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NoMercy.Database.Models.UserData", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("TvId");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("NoMercy.Database.Models.VideoFile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.ToTable("VideoFiles");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Album_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Album_User", b =>
                {
                    b.HasOne("NoMercy.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.AlternativeTitle", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("AlternativeTitles")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("AlternativeTitles")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Artist_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Artist_Track", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Cast", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", "Episode")
                        .WithMany("Casts")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", "Movie")
                        .WithMany("Cast")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", "Season")
                        .WithMany("Casts")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", "Tv")
                        .WithMany("Cast")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Episode");

                    b.Navigation("Movie");

                    b.Navigation("Season");

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Certification_Movie", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Certification_Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Certification_Tv", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Tv", "Tv")
                        .WithMany("Certification_Tvs")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Collection_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Collection_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Collection_Movie", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Creator", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Tv", "Tv")
                        .WithMany()
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Crew", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("Crews")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Crew")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", null)
                        .WithMany("Crews")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Crew")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.EncoderProfile_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.EncoderProfile", null)
                        .WithMany("EncoderProfile_Library")
                        .HasForeignKey("EncoderProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoMercy.Database.Models.Library", "Library")
                        .WithMany("EncoderProfile_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Episode", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Season", "Season")
                        .WithMany("Episodes")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Episodes")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("NoMercy.Database.Models.File", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("Files")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.File_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("File_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Folder_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoMercy.Database.Models.Library", "Library")
                        .WithMany("Folder_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Genre_Movie", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Genre_Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Genre_Tv", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Genre_Tvs")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.GuestStar", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("GuestStars")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", null)
                        .WithMany("GuestStars")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Image", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("Images")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Images")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", null)
                        .WithMany("Images")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Images")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Keyword_Movie", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Keyword_Movies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Keyword_Tv", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Tv", "Tv")
                        .WithMany("Keyword_Tvs")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tv");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Language_Library", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Language", null)
                        .WithMany("Language_Library")
                        .HasForeignKey("LanguageId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Library", "Library")
                        .WithMany("Language_Libraries")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Movie", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Library_Movies")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Track", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Library_Tracks")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoMercy.Database.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_Tv", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Library_Tvs")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library_User", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Library", null)
                        .WithMany("Library_Users")
                        .HasForeignKey("LibraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Media", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("Medias")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Media")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", null)
                        .WithMany("Medias")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Media")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Music_Play", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Notification_User", b =>
                {
                    b.HasOne("NoMercy.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Person", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Cast", null)
                        .WithMany("People")
                        .HasForeignKey("CastId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Crew", null)
                        .WithMany("People")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Playlist_Track", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Recommendation", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Recommendation_From")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Recommendation_To")
                        .HasForeignKey("MovieId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Recommendation_From")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Recommendation_To")
                        .HasForeignKey("TvId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Season", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Seasons")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Seasons")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NoMercy.Database.Models.Similar", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Similar_From")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Similar_To")
                        .HasForeignKey("MovieId1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Similar_From")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Similar_To")
                        .HasForeignKey("TvId1")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.SpecialItem", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("SpecialItems")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Track_User", b =>
                {
                    b.HasOne("NoMercy.Database.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Translation", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("Translations")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("Translations")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Season", null)
                        .WithMany("Translations")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("Translations")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.UserData", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Movie", null)
                        .WithMany("UserData")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("NoMercy.Database.Models.Tv", null)
                        .WithMany("UserData")
                        .HasForeignKey("TvId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.VideoFile", b =>
                {
                    b.HasOne("NoMercy.Database.Models.Episode", null)
                        .WithMany("VideoFiles")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NoMercy.Database.Models.Cast", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Crew", b =>
                {
                    b.Navigation("People");
                });

            modelBuilder.Entity("NoMercy.Database.Models.EncoderProfile", b =>
                {
                    b.Navigation("EncoderProfile_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Episode", b =>
                {
                    b.Navigation("Casts");

                    b.Navigation("Crews");

                    b.Navigation("Files");

                    b.Navigation("GuestStars");

                    b.Navigation("Images");

                    b.Navigation("Medias");

                    b.Navigation("SpecialItems");

                    b.Navigation("Translations");

                    b.Navigation("VideoFiles");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Language", b =>
                {
                    b.Navigation("Language_Library");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Library", b =>
                {
                    b.Navigation("Album_Libraries");

                    b.Navigation("Artist_Libraries");

                    b.Navigation("Collection_Libraries");

                    b.Navigation("EncoderProfile_Libraries");

                    b.Navigation("File_Libraries");

                    b.Navigation("Folder_Libraries");

                    b.Navigation("Language_Libraries");

                    b.Navigation("Library_Movies");

                    b.Navigation("Library_Tracks");

                    b.Navigation("Library_Tvs");

                    b.Navigation("Library_Users");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Movie", b =>
                {
                    b.Navigation("AlternativeTitles");

                    b.Navigation("Cast");

                    b.Navigation("Certification_Movies");

                    b.Navigation("Crew");

                    b.Navigation("Genre_Movies");

                    b.Navigation("Images");

                    b.Navigation("Keyword_Movies");

                    b.Navigation("Media");

                    b.Navigation("Recommendation_From");

                    b.Navigation("Recommendation_To");

                    b.Navigation("Seasons");

                    b.Navigation("Similar_From");

                    b.Navigation("Similar_To");

                    b.Navigation("Translations");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Season", b =>
                {
                    b.Navigation("Casts");

                    b.Navigation("Crews");

                    b.Navigation("Episodes");

                    b.Navigation("GuestStars");

                    b.Navigation("Images");

                    b.Navigation("Medias");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("NoMercy.Database.Models.Tv", b =>
                {
                    b.Navigation("AlternativeTitles");

                    b.Navigation("Cast");

                    b.Navigation("Certification_Tvs");

                    b.Navigation("Crew");

                    b.Navigation("Episodes");

                    b.Navigation("Genre_Tvs");

                    b.Navigation("Images");

                    b.Navigation("Keyword_Tvs");

                    b.Navigation("Media");

                    b.Navigation("Recommendation_From");

                    b.Navigation("Recommendation_To");

                    b.Navigation("Seasons");

                    b.Navigation("Similar_From");

                    b.Navigation("Similar_To");

                    b.Navigation("Translations");

                    b.Navigation("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
